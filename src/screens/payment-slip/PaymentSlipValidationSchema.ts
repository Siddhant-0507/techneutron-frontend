import * as Yup from "yup";

export const PaymentSlipValidationSchema = Yup.object().shape({
  employee_id: Yup.number().required("Employee ID is required").min(1, "Employee ID must be 1 or more"),
  total_working_days: Yup.number().required("Total Working Days is required").min(1, "Total Working Days must be 1 or more"),
  present_working_days: Yup.number().required("Present Working Days is required").min(0, "Present Working Days must be 0 or more"),
  period: Yup.string().required("Period is required"),
  basic_salary: Yup.number().required("Basic Salary is required").min(1, "Basic Salary must be 1 or more"),
  house_rent_allowance: Yup.number().required("House Rent Allowance is required").min(0, "House Rent Allowance must be 0 or more"),
  special_allowance: Yup.number().required("Special Allowance is required").min(0, "Special Allowance must be 0 or more"),
  conveyance: Yup.number().required("Conveyance is required").min(0, "Conveyance must be 0 or more"),
  additional_special_allowance: Yup.number().required("Additional Special Allowance is required").min(0, "Additional Special Allowance must be 0 or more"),
  on_call_shift_allowance: Yup.number().required("On Call Shift Allowance is required").min(0, "On Call Shift Allowance must be 0 or more"),
  stat_bonus: Yup.number().required("Stat Bonus is required").min(0, "Stat Bonus must be 0 or more"),
  provident_fund: Yup.number().required("Provident Fund is required").min(0, "Provident Fund must be 0 or more"),
  professional_tax: Yup.number().required("Professional Tax is required").min(0, "Professional Tax must be 0 or more"),
  income_tax: Yup.number().required("Income Tax is required").min(0, "Income Tax must be 0 or more"),
  gross_earning: Yup.number().required("Gross Earning is required").min(0, "Gross Earning must be 0 or more"),
  gross_deduction: Yup.number().required("Gross Deduction is required").min(0, "Gross Deduction must be 0 or more"),
  net_pay: Yup.number().required("Net Pay is required").min(0, "Net Pay must be 0 or more"),
  overtime_hours: Yup.number().required("Overtime Hours is required").min(0, "Overtime Hours must be 0 or more"),
  overtime_pay: Yup.number().required("Overtime Pay is required").min(0, "Overtime Pay must be 0 or more"),
  bonus: Yup.number().required("Bonus is required").min(0, "Bonus must be 0 or more"),
  commission: Yup.number().required("Commission is required").min(0, "Commission must be 0 or more"),
  reimbursement: Yup.number().required("Reimbursement is required").min(0, "Reimbursement must be 0 or more"),
  other_allowances: Yup.number().required("Other Allowances are required").min(0, "Other Allowances must be 0 or more"),
  deduction_details: Yup.string().required("Deduction Details is required"),
  remarks: Yup.string().required("Remarks are required"),
  employee_rating: Yup.number().required("Employee Rating is required").min(0, "Employee Rating must be 0 or more").max(10, "Employee Rating must be 10 or less"),
  performance_bonus: Yup.number().required("Performance Bonus is required").min(0, "Performance Bonus must be 0 or more"),
  shift_allowance: Yup.number().required("Shift Allowance is required").min(0, "Shift Allowance must be 0 or more"),
  medical_allowance: Yup.number().required("Medical Allowance is required").min(0, "Medical Allowance must be 0 or more"),
  leave_balance: Yup.number().required("Leave Balance is required").min(0, "Leave Balance must be 0 or more"),
  loan_deduction: Yup.number().required("Loan Deduction is required").min(0, "Loan Deduction must be 0 or more"),
  insurance_premium: Yup.number().required("Insurance Premium is required").min(0, "Insurance Premium must be 0 or more"),
  attendance_bonus: Yup.number().required("Attendance Bonus is required").min(0, "Attendance Bonus must be 0 or more"),
  travel_allowance: Yup.number().required("Travel Allowance is required").min(0, "Travel Allowance must be 0 or more"),
  uniform_allowance: Yup.number().required("Uniform Allowance is required").min(0, "Uniform Allowance must be 0 or more"),
  training_allowance: Yup.number().required("Training Allowance is required").min(0, "Training Allowance must be 0 or more"),
  other_deductions: Yup.number().required("Other Deductions are required").min(0, "Other Deductions must be 0 or more"),
  bonus_details: Yup.string().required("Bonus Details is required"),
  incentive: Yup.number().required("Incentive is required").min(0, "Incentive must be 0 or more"),
  tax_deduction_at_source: Yup.number().required("Tax Deduction at Source is required").min(0, "Tax Deduction at Source must be 0 or more"),
  salary_advance: Yup.number().required("Salary Advance is required").min(0, "Salary Advance must be 0 or more"),
  loan_balance: Yup.number().required("Loan Balance is required").min(0, "Loan Balance must be 0 or more"),
  payment_mode: Yup.string().required("Payment Mode is required"),
  payment_date: Yup.date().required("Payment Date is required")
});

